{
    "1": {
        "desc": "Open the file 'src/planterExercises'. You will find functions numbered for the stage they correspond to, so you will first start with the function planter1.\nYou will see an array named planter linked to the planter you can see above. This planter has 5 slots, you will get an error if you try to add more plants.\nNow go ahead and manually edit the array to sow a seed (🌱) in the first slot.",
        "result": {
            "planter": ["🌱", "", "", "", ""],
            "pot": ""
        }
    },
    "2": {
        "desc": "Same as what you did previously, except this time we want to add a seed to the second slot.",
        "result": {
            "planter": ["🌱", "🌱", "", "", ""],
            "pot": ""
        }
    },
    "3": {
        "desc" : "Now use a php array method to 'push' a third plant to the end of the planter array without modifying it manually.",
        "result": {
            "planter": ["🌱", "🌱", "🌱", "", ""],
            "pot": ""
        }
    },
    "4": {
        "desc" : "Add a plant to the fifth slot but leave the fourth one empty.",
        "result": {
            "planter": ["🌱", "🌱", "🌱", "", "🌱"],
            "pot": ""
        }
    },
    "5": {
        "desc" : "Now fill the entire planter, but this time by using a php loop.",
        "result": {
            "planter": ["🌱", "🌱", "🌱", "🌱", "🌱"],
            "pot": ""
        }
    },
    "6": {
        "desc" : "Still by using a loop, fill only one every two spots.",
        "result": {
            "planter": ["🌱", "", "🌱", "", "🌱"],
            "pot": ""
        }
    },
    "7": {
        "desc" : "With a loop, fill the planter once again but this time by alternating two different plants.",
        "result": {
            "planter": ["🌱", "🌸", "🌱", "🌸", "🌱"],
            "pot": ""
        }
    },
    "8": {
        "desc" : "You have two planters, the first one containing 2 plants, the second one containing 3. You must find and use the right array method to put both of those arrays in your main planter.",
        "result": {
            "planter": ["🌱", "🌱", "🌱", "🌱", "🌱"],
            "pot": ""
        }
    },
    "9": {
        "desc" : "That flower should be in the pot, so let's transfer it. Remove the last element from the planter and add it to the pot with the right array method.\n(Hint: There are two pairs of methods to add or remove elements from the beginning or the end of an array. Some of them will return the value being handled.)",
        "result": {
            "planter": ["🌱", "🌱", "🌱", "🌱", ""],
            "pot": "🌸"
        }
    },
    "10": {
        "desc" : "Same exercise as the previous one, but this time you need to remove the first element from the planter and add it to the pot.",
        "result": {
            "planter": ["", "🌱", "🌱", "🌱", "🌱"],
            "pot": "🌸"
        }
    },
    "11": {
        "desc" : "There is a rose among the tulips. Replace it with a tulip with an array method.",
        "result": {
            "planter": ["🌷", "🌷", "🌷", "🌷", "🌷"],
            "pot": ""
        }
    },
    "12": {
        "desc" : "The flower arrangement looks nice but... Maybe it would look better if we reversed it with the appropriate array method.",
        "result": {
            "planter": ["🏵️", "🌸", "🌷", "🌹", "🌼"],
            "pot": ""
        }
    },
    "13": {
        "desc" : "Plant the flowers you prefer. However, if there is at least one 'Rosette' in the planter, there must be a sunflower in the pot.",
        "result": {
            "planter": ["🏵️", "🌱", "🌱", "🌱", "🌱"],
            "pot": "🌻"
        }
    }
}